@import "open-props/fonts";
@import "open-props/shadows";
@import "open-props/colors";
@import "open-props/aspects";

/* @tailwind base; */
@tailwind components;
@tailwind utilities;

* {
  box-sizing: border-box;
  margin: 0;
}

html {
  block-size: 100%;
  background-color: var(--surface-1);
  color: var(--text-1);
  accent-color: var(--brand);
}

body {
  /* min-block-size: 100%; */
  font-family: system-ui, sans-serif;
  /* display: grid; */
  /* place-content: center; */
}

.surface1 {
  background-color: var(--surface-1);
  color: var(--text-2);
}

.surface2 {
  background-color: var(--surface-2);
  color: var(--text-2);
}

.surface3 {
  background-color: var(--surface-3);
  color: var(--text-1);
}

.surface4 {
  background-color: var(--surface-4);
  color: var(--text-1);
}

.text1 {
  color: var(--text-1);
}
p.text1 {
  font-weight: var(--font-weight-2);
}

.text2 {
  color: var(--text-2);
}

.link {
  color: var(--link);
  background-color: var(--link);
}

.link-visited {
  color: var(--link-visited);
  background-color: var(--link-visited);
}
:where(html) {
  --link: var(--indigo-7);
  --link-visited: var(--purple-7);
  --text-1: var(--gray-12);
  --text-2: var(--gray-7);
  --surface-1: var(--gray-0);
  --surface-2: var(--gray-2);
  --surface-3: var(--gray-3);
  --surface-4: var(--gray-4);
  --scrollthumb-color: var(--gray-7);
  -webkit-text-size-adjust: none;
  accent-color: var(--brand, var(--link));
  background-color: var(--surface-1);
  block-size: 100%;
  caret-color: var(--brand, var(--link));
  color: var(--text-1);
  color-scheme: light;
  font-family: var(--font-sans);
  line-height: var(--font-lineheight-3);
  scrollbar-color: var(--scrollthumb-color) transparent;
}
@media (dynamic-range: high) or (color-gamut: p3) {
  @supports (color: color(display-p3 0 0 0)) {
    :where(html) {
      --link: color(display-p3 0.1 0.4 1);
      --link-visited: color(display-p3 0.6 0.2 1);
    }
  }
}
:where(html) :where(dialog) {
  background-color: var(--surface-1);
}
:where(html) :where(button, .btn) {
  --_highlight: var(--_highlight-light);
  --_bg: var(--_bg-light);
  --_ink-shadow: var(--_ink-shadow-light);
}
:where(html) :where(button, .btn) :where([type="reset"]) {
  --_text: var(--red-6);
  --_border: var(--red-3);
}
:where(html)
  :where(
    button,
    .btn,
    input:is([type="button"], [type="submit"], [type="reset"])
  )[disabled] {
  --_text: var(--gray-6);
}
:where(html)
  :where(
    textarea,
    select,
    input:not([type="button"], [type="submit"], [type="reset"])
  ) {
  background-color: var(--surface-2);
}
@media (prefers-color-scheme: dark) {
  :where(html) {
    --link: var(--indigo-3);
    --link-visited: var(--purple-3);
    --text-1: var(--gray-1);
    --text-2: var(--gray-4);
    --surface-1: var(--gray-9);
    --surface-2: var(--gray-8);
    --surface-3: var(--gray-7);
    --surface-4: var(--gray-6);
    --scrollthumb-color: var(--gray-6);
    --shadow-strength: 10%;
    --shadow-color: 220 40% 2%;
    color-scheme: dark;
  }
}
:where(a[href]) {
  color: var(--brand, var(--link));
}
:where(a[href]):where(:visited) {
  color: var(--link-visited);
}
:focus-visible {
  outline-color: var(--brand, var(--link));
}
*,
:after,
:before {
  box-sizing: border-box;
}
:where(:not(dialog)) {
  margin: 0;
}
:where(:not(fieldset, progress, meter)) {
  background-origin: border-box;
  background-repeat: no-repeat;
  border-style: solid;
  border-width: 0;
}
@media (prefers-reduced-motion: no-preference) {
  :where(html) {
    scroll-behavior: smooth;
  }
}
@media (prefers-reduced-motion: no-preference) {
  :where(:focus-visible) {
    transition: outline-offset 145ms var(--ease-2);
  }
  :where(:not(:active):focus-visible) {
    transition-duration: 0.25s;
  }
}
:where(:not(:active):focus-visible) {
  outline-offset: 5px;
}
:where(body) {
  min-block-size: 100%;
}

:where(
    a[href],
    area,
    button,
    input:not(
        [type="text"],
        [type="email"],
        [type="number"],
        [type="password"],
        [type=""],
        [type="tel"],
        [type="url"]
      ),
    label[for],
    select,
    summary,
    [tabindex]:not([tabindex*="-"])
  ) {
  cursor: pointer;
}
:where(
    a[href],
    area,
    button,
    input,
    label[for],
    select,
    summary,
    textarea,
    [tabindex]:not([tabindex*="-"])
  ) {
  -webkit-tap-highlight-color: transparent;
  touch-action: manipulation;
}
:where(a):where([href]) {
  text-decoration-color: var(--indigo-2);
}
:where(a):where([href]):where(:visited) {
  text-decoration-color: var(--purple-2);
}
:where(a):where(:not(:hover)) {
  text-decoration: inherit;
}
:where(img, svg, video, canvas, audio, iframe, embed, object) {
  display: block;
}
:where(img, svg, video) {
  block-size: auto;
  max-inline-size: 100%;
}
:where(input, button, textarea, select),
:where(input[type="file"])::-webkit-file-upload-button {
  color: inherit;
  font: inherit;
  font-size: inherit;
  letter-spacing: inherit;
}
::placeholder {
  color: var(--gray-7);
  opacity: 0.75;
}

:where(
    textarea,
    select,
    input:not([type="button"], [type="submit"], [type="reset"])
  ) {
  background-color: var(--surface-2);
  border-radius: var(--radius-2);
}
:where(textarea) {
  resize: block;
}

:where(code, kbd, samp, pre) {
  font-family: var(--font-mono);
}
:where(:not(pre) > code, kbd) {
  white-space: nowrap;
}
:where(pre) {
  direction: ltr;
  max-inline-size: max-content;
  min-inline-size: 0;
  white-space: pre;
  writing-mode: lr;
}

:where(figure) > :where(figcaption) {
  text-wrap: balance;
  font-size: var(--font-size-1);
}

:where(fieldset) {
  border: var(--border-size-1) solid var(--surface-4);
  border-radius: var(--radius-2);
}

:where(ins) {
  background: var(--green-9);
  color: var(--green-1);
}
:where(abbr) {
  text-decoration-color: var(--blue-5);
}

@media (prefers-color-scheme: dark) {
  :where(
      textarea,
      select,
      input:not([type="button"], [type="submit"], [type="reset"])
    ) {
    background-color: #171a1c;
  }
  :where(dialog) {
    background-color: var(--surface-2);
  }
  ::placeholder {
    color: var(--gray-6);
  }
}
